basePath: /
definitions:
  models.AddPermUser:
    properties:
      role_id:
        type: string
    type: object
  models.AddPermUserGroup:
    properties:
      role_id:
        type: string
    type: object
  models.GoogleAuth:
    properties:
      qr_code:
        type: string
      secret:
        type: string
    type: object
  models.PubCurrentUser:
    properties:
      name:
        type: string
      roles:
        items:
          $ref: '#/definitions/models.RoleLine'
        type: array
      user_id:
        type: string
      user_name:
        type: string
    type: object
  models.RoleLine:
    properties:
      act_name:
        type: string
      obj_name:
        type: string
    type: object
  models.SwaggerObjActId:
    properties:
      id:
        type: string
    type: object
  models.SwaggerRole:
    properties:
      remark:
        type: string
      role_name:
        type: string
      roleObjActs:
        items:
          $ref: '#/definitions/models.SwaggerObjActId'
        type: array
    required:
    - roleObjActs
    - role_name
    type: object
  models.SwaggerUser:
    properties:
      email:
        type: string
      name:
        type: string
      pass_word:
        type: string
      phone:
        type: string
      user_name:
        type: string
    required:
    - name
    - pass_word
    - user_name
    type: object
  models.SwaggerUserGroup:
    properties:
      group_name:
        type: string
      remark:
        type: string
      users:
        items:
          $ref: '#/definitions/models.SwaggerUserId'
        type: array
    required:
    - group_name
    - users
    type: object
  models.SwaggerUserId:
    properties:
      id:
        type: string
    type: object
  models.UserLogin:
    properties:
      otp_code:
        type: string
      pass_word:
        type: string
      user_name:
        type: string
    required:
    - otp_code
    - pass_word
    - user_name
    type: object
  result.CreateQrCodeResult:
    properties:
      code:
        type: integer
      data:
        type: string
      msg:
        type: string
    type: object
  result.FailResult:
    properties:
      code:
        type: integer
      err:
        type: string
      msg:
        type: string
    type: object
  result.LoginResult:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/result.LoginTokenResult'
        type: object
      msg:
        type: string
    type: object
  result.LoginTokenResult:
    properties:
      token:
        type: string
    type: object
  result.PubCurrentUserResult:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/models.PubCurrentUser'
        type: object
      msg:
        type: string
    type: object
  result.RegisterUserResult:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/models.GoogleAuth'
        type: object
      msg:
        type: string
    type: object
  result.SuccessResult:
    properties:
      code:
        type: integer
      msg:
        type: string
    type: object
host: 192.168.31.2:8080
info:
  contact:
    email: heyangev@cn.ibm.com
    name: API Support
    url: http://mail.csic711.com/
  description: This is a wisdomPortal backend interface system server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: WisdomPortal backend API
  version: v1.0
paths:
  /api/v1/create-qr-code:
    get:
      consumes:
      - application/json
      description: 用于用户绑定多因子
      parameters:
      - description: 数据
        in: query
        name: data
        required: true
        type: string
      - description: 秘钥
        in: query
        name: secret
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 10000}'
          schema:
            $ref: '#/definitions/result.CreateQrCodeResult'
        "400":
          description: '{"code": 10001}'
          schema:
            $ref: '#/definitions/result.FailResult'
        "500":
          description: '{"code": 60001}'
          schema:
            $ref: '#/definitions/result.FailResult'
      summary: 生成多因子认证二维码
      tags:
      - 多因子
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: 用于用户登录
      parameters:
      - description: 数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 10000}'
          schema:
            $ref: '#/definitions/result.LoginResult'
        "400":
          description: '{"code": 10001}'
          schema:
            $ref: '#/definitions/result.FailResult'
        "401":
          description: '{"code": 20002}'
          schema:
            $ref: '#/definitions/result.FailResult'
      summary: 用户登录
      tags:
      - 登录管理
  /api/v1/perm:
    post:
      consumes:
      - application/json
      description: 用于创建权限模板
      parameters:
      - description: 数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SwaggerRole'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 10000}'
          schema:
            $ref: '#/definitions/result.SuccessResult'
        "400":
          description: '{"code": 10001}'
          schema:
            $ref: '#/definitions/result.FailResult'
        "415":
          description: '{"code": 50004}'
          schema:
            $ref: '#/definitions/result.FailResult'
      security:
      - ApiKeyAuth: []
      summary: 添加权限模板
      tags:
      - 权限
  /api/v1/perm/user/{uid}:
    post:
      consumes:
      - application/json
      description: 用于用户关联权限
      parameters:
      - description: 权限模板id
        in: body
        name: role_id
        required: true
        schema:
          $ref: '#/definitions/models.AddPermUser'
      - description: 用户id
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 10000}'
          schema:
            $ref: '#/definitions/result.SuccessResult'
        "400":
          description: '{"code": 10004}'
          schema:
            $ref: '#/definitions/result.FailResult'
        "415":
          description: '{"code": 50004}'
          schema:
            $ref: '#/definitions/result.FailResult'
      security:
      - ApiKeyAuth: []
      summary: 用户关联权限模板
      tags:
      - 权限
  /api/v1/perm/userGroup/{gid}:
    post:
      consumes:
      - application/json
      description: 用于用户组关联权限
      parameters:
      - description: 权限模板id
        in: body
        name: role_id
        required: true
        schema:
          $ref: '#/definitions/models.AddPermUserGroup'
      - description: 用户组id
        in: path
        name: gid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 10000}'
          schema:
            $ref: '#/definitions/result.SuccessResult'
        "400":
          description: '{"code": 10004}'
          schema:
            $ref: '#/definitions/result.FailResult'
        "415":
          description: '{"code": 50004}'
          schema:
            $ref: '#/definitions/result.FailResult'
      security:
      - ApiKeyAuth: []
      summary: 用户组关联权限模板
      tags:
      - 权限
  /api/v1/pub/current/user:
    get:
      consumes:
      - application/json
      description: 获取当前用户信息
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 10000}'
          schema:
            $ref: '#/definitions/result.PubCurrentUserResult'
        "400":
          description: '{"code": 20004}'
          schema:
            $ref: '#/definitions/result.FailResult'
      security:
      - ApiKeyAuth: []
      summary: 获取当前用户信息
      tags:
      - 登录管理
  /api/v1/register:
    post:
      consumes:
      - application/json
      description: 用于用户的注册
      parameters:
      - description: 用户注册数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SwaggerUser'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 10000}'
          schema:
            $ref: '#/definitions/result.RegisterUserResult'
        "400":
          description: '{"code": 10001}'
          schema:
            $ref: '#/definitions/result.FailResult'
        "415":
          description: '{"code": 50004}'
          schema:
            $ref: '#/definitions/result.FailResult'
      summary: 注册用户
      tags:
      - 用户注册
  /api/v1/userGroup:
    post:
      consumes:
      - application/json
      description: 用于用户组的创建
      parameters:
      - description: 用户组数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SwaggerUserGroup'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 10000}'
          schema:
            $ref: '#/definitions/result.SuccessResult'
        "400":
          description: '{"code": 10001}'
          schema:
            $ref: '#/definitions/result.FailResult'
        "415":
          description: '{"code": 50004}'
          schema:
            $ref: '#/definitions/result.FailResult'
      security:
      - ApiKeyAuth: []
      summary: 添加用户组
      tags:
      - 用户组
  /api/v1/view-qr-code:
    get:
      consumes:
      - application/json
      description: 用于用户绑定多因子
      parameters:
      - description: 图片名
        in: query
        name: imagename
        required: true
        type: string
      responses:
        "200": {}
        "400":
          description: '{"code": 10001}'
          schema:
            $ref: '#/definitions/result.FailResult'
        "404":
          description: '{"code": 50001}'
          schema:
            $ref: '#/definitions/result.FailResult'
        "500":
          description: '{"code": 60001}'
          schema:
            $ref: '#/definitions/result.FailResult'
      summary: 显示多因子认证二维码
      tags:
      - 多因子
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
